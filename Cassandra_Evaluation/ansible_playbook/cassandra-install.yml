# Playbook to install and configure Cassandra according to recommended settings
#
# For installation instructions, see https://www.howtoforge.com/tutorial/how-to-install-apache-cassandra-on-centos-7/,
#  http://digitalocean.com/community/tutorials/how-to-run-a-multi-node-cluster-database-with-cassandra-on-ubuntu-14-04 and http://cassandra.apache.org/download/
#
# For recommended settings - see http://docs.datastax.com/en/landing_page/doc/landing_page/recommendedSettings.html

# Search for the text changeme to look for lines that could be changed based on device name, OS etc.,
---
- hosts: cassnodes
  vars:
   host_ip: '{{ ansible_default_ipv4["address"] }}'
   cluster_nodes: "{{ groups['cassnodes'] }}"
   cluster_list: "{{ ','.join(cluster_nodes) }}"
  tasks:
   - set_fact:
      ip_allow_list: "{{ cluster_nodes | difference(host_ip) }}" # Allow traffic from cassandra nodes other than the local node
   - name: Add hostname to /etc/hosts file
     become: true
     lineinfile:
      dest: /etc/hosts
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
     with_items:
      - { regexp: '^\s*127.0.0.1\s*localhost\s*$', line: '127.0.0.1 localhost localhost.localdomain {{ ansible_hostname }}' }
     register: hostsfilechanged
   - name: Install persistent iptables
     when: hostsfilechanged|success
     yum:
      pkg: iptables-services
      state: installed
     register: iptablesinstall
   - name: Add Cassandra repository key
     rpm_key:
       key: https://www.apache.org/dist/cassandra/KEYS
       state: present
     register: cassrepokey  
   - name: Add Cassandra repository
     when: cassrepokey|success
     yum_repository:
       name: cassandra
       baseurl: http://www.apache.org/dist/cassandra/redhat/311x/
       description: Cassandra repository details
       state: present
     register: cassrepoadd
   - name: Install Cassandra
     when: cassrepoadd|success
     yum:
      pkg: cassandra-0:3.11.1-1.noarch
      state: installed
      update_cache: true
     register: cassinstall
   - name: Stop Cassandra
     when: cassinstall|success
     systemd:
      name: cassandra
      state: stopped
     register: cassstop
   - name: Disable CPU Frequency scaling
     when: cassstop|success
     script: ./disable-cpufreq.sh
   - name: Disable zone reclaim on NUMA systems
     when: cassstop|success
     become: true     
     lineinfile:
      dest=/proc/sys/vm/zone_reclaim_mode
      regexp=''
      insertafter=EOF
      line='0'
   - name: Set user resource limits
     when: cassstop|success
     become: true
     lineinfile:
      dest: /etc/security/limits.d/cassandra.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
     with_items:
      - { regexp: '^cassandra.+memlock', line: 'cassandra  -  memlock  unlimited' }
      - { regexp: '^cassandra.+nofile', line: 'cassandra  -  nofile   100000' }
      - { regexp: '^cassandra.+as ', line: 'cassandra  -  as       unlimited' }
      - { regexp: '^cassandra.+nproc ', line: 'cassandra  -  nproc    32768' }
   - name: Enable pam_limits module
     when: cassstop|success
     become: true
     lineinfile:
      dest: /etc/pam.d/su
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      backrefs: true
     with_items:
      - { regexp: '^#\s*session\s+required\s+pam_limits.so', line: 'session    required   pam_limits.so' }
   - name: Optimize sysctl
     when: cassstop|success
     become: true
     blockinfile: |
      dest=/etc/sysctl.conf
      content="net.core.rmem_max = 16777216
        net.core.wmem_max = 16777216
        net.core.rmem_default = 16777216
        net.core.wmem_default = 16777216
        net.core.optmem_max = 40960
        net.ipv4.tcp_rmem = 4096 87380 16777216
        net.ipv4.tcp_wmem = 4096 65536 16777216
        vm.max_map_count = 1048575
        vm.swappiness=0"
   - name: Disable transparent huge pages
     when: cassstop|success
     become: true
     shell: echo never | tee /sys/kernel/mm/transparent_hugepage/defrag
     register: transphugepages
   - name: Optimize SSD settings #changeme
     when: cassstop|success
     become: true
     blockinfile:
      path: /etc/rc.local
      insertbefore: '\s*exit\s+0\s*'
      content: |
        echo deadline > /sys/block/vda/queue/scheduler
        touch /var/lock/subsys/local
        echo 0 > /sys/class/block/vda/queue/rotational
        echo 8 > /sys/class/block/vda/queue/read_ahead_kb
   - name: Update readahead #changeme
     when: cassstop|success
     become: true
     command: blockdev --setra 128 /dev/vda
   - name: Use local storage for Cassandra Commit Log     
     when: cassstop|success
     become: true
     command: bash -c "rm -rf /var/lib/cassandra_commit_log && mkdir -p /var/lib/cassandra_commit_log && chown -R cassandra.cassandra /var/lib/cassandra_commit_log && rm -rf /var/lib/cassandra/commitlog && ln -s /var/lib/cassandra_commit_log  /var/lib/cassandra/commitlog"
   - name: Delete default dataset
     when: cassstop|success
     become: true
     command: rm -rf /var/lib/cassandra/data/system/*
   - name: Configure Cassandra Cluster settings in Cassandra YAML file
     when: cassstop|success
     become: true
     lineinfile:
      dest: /etc/cassandra/conf/cassandra.yaml
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      backrefs: true
     with_items:
      - { regexp: '^(\s*cluster_name:\s+).*', line: '\g<1>''cassclust''' }
      - { regexp: '^(\s*-\s*seeds:\s+).*', line: '\g<1>"{{ cluster_list }}"' }
      - { regexp: '^(\s*listen_address:\s+).*', line: '\g<1>{{ host_ip }}' }
      - { regexp: '^(\s*rpc_address:\s+).*', line: '\g<1>{{ host_ip }}' }
      - { regexp: '^(\s*read_request_timeout_in_ms:\s+).*', line: '\g<1>1200000' }
      - { regexp: '^(\s*range_request_timeout_in_ms:\s+).*', line: '\g<1>1200000' }
      - { regexp: '^(\s*write_request_timeout_in_ms:\s+).*', line: '\g<1>1200000' }
      - { regexp: '^(\s*request_timeout_in_ms:\s+).*', line: '\g<1>1200000' }      
   - name: Configure Cassandra Environment settings in cassandra-env.sh
     when: cassstop|success
     become: true
     lineinfile:
      dest: /etc/cassandra/conf/cassandra-env.sh
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      backrefs: true
     with_items:
      - { regexp: '^(\s*#\s*JVM_OPTS.+Djava.rmi.server.hostname\s*).*', line: 'JVM_OPTS="$JVM_OPTS -Djava.rmi.server.hostname={{ host_ip }}"' }      
   - name: Disable Auto-Bootstrap in Cassandra YAML file
     when: cassstop|success
     become: true
     lineinfile:
      dest=/etc/cassandra/conf/cassandra.yaml
      regexp=''
      insertafter=EOF
      line='auto_bootstrap{{ ":" }} false'
   - name: Restart Cassandra
     when: cassstop|success
     become: true
     systemd:
      name: cassandra
      daemon_reload: yes
      state: started
   - name: Remove traffic restrictions on current node
     become: true
     lineinfile:
      dest: /etc/sysconfig/iptables
      state: absent
      regexp: '\s*-A.*'
     with_items: "{{ ip_allow_list }}"
   - name: Allow traffic to current node from other nodes
     become: true
     lineinfile:
      dest: /etc/sysconfig/iptables
      line: '-A INPUT -p tcp -s {{ item }} -m multiport --dports 7000,9042 -m state --state NEW,ESTABLISHED -j ACCEPT'
      insertbefore: '^\s*COMMIT\s*'
     with_items: "{{ ip_allow_list }}"
     register: firewallcfg
   - name: Reload sysctl
     when: firewallcfg|success
     become: true
     command: sysctl -p
   - name: Restart iptables
     when: iptablesinstall|success
     become: true
     systemd:
      name: iptables
      state: restarted